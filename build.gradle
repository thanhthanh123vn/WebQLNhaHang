/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.hidetake.ssh' version '2.11.2'  // Đã đặt plugin ở đây
    id 'war'
}

import org.hidetake.groovy.ssh.core.*
def sshExt = ssh
project.ssh.settings {
    knownHosts = allowAnyHosts
}

remotes {
    host {
        role 'web'
        host = '192.168.9.133'
        user = 'root'
        password = 'centos'
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.jakarta.servlet.jsp.jstl.jakarta.servlet.jsp.jstl.api
    api libs.org.glassfish.web.jakarta.servlet.jsp.jstl
    api libs.org.mindrot.jbcrypt
    api libs.org.glassfish.jersey.containers.jersey.container.servlet
    api libs.org.glassfish.jersey.media.jersey.media.json.jackson
    api libs.org.jboss.weld.servlet.weld.servlet.shaded
    api libs.org.hibernate.orm.hibernate.core
    api libs.org.hibernate.validator.hibernate.validator
    api libs.org.glassfish.jaxb.jaxb.runtime
    api libs.com.mysql.mysql.connector.j
    api libs.com.google.code.gson.gson
    testImplementation libs.org.junit.jupiter.junit.jupiter.api
    testImplementation libs.org.junit.jupiter.junit.jupiter.engine
    compileOnly libs.jakarta.servlet.jakarta.servlet.api
    compileOnly libs.org.projectlombok.lombok
    annotationProcessor libs.org.projectlombok.lombok
}

group = 'hcmuaf.edu.fit'
version = '1.0-SNAPSHOT'
description = 'WebQLNhaHang'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.register('docker_app_start') {
    doLast {
        println 'begin docker_app_start'
        sshExt.run {
            session(remotes.host) {
                execute 'docker stop tomcat10', ignoreError: true
                execute '''
                    docker run -it --rm -d \
                    --name tomcat10 \
                    -v /usr/deploy:/usr/local/tomcat/webapps \
                    -p 80:8080 \
                    tomcat:10.0
                '''
            }
        }
    }
}

tasks.register('docker_upload_file_to_server') {
    doLast {
        println 'begin docker_upload_file_to_server'
        sshExt.run {
            session(remotes.host) {
                execute 'mkdir -p /usr/deploy'
                execute 'rm -f /usr/deploy/WebQLNhaHang.war', ignoreError: true
                execute 'rm -rf /usr/deploy/WebQLNhaHang', ignoreError: true
                put from: "${buildDir}/libs/WebQLNhaHang-1.0-SNAPSHOT.war",
                        into: "/usr/deploy/WebQLNhaHang.war"
            }
        }
    }
}

tasks.register('docker_deploy') {
    dependsOn 'build', 'docker_upload_file_to_server', 'docker_app_start'
}

// Sử dụng mustRunAfter ngoài task.register
tasks.named('docker_app_start') {
    mustRunAfter 'docker_upload_file_to_server'
}